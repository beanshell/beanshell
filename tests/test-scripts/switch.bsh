#!/bin/java bsh.Interpreter

source("TestHarness.bsh");

switch(0) {
	default:
}

print("test1");
test_flag = 0;
switch( 1 ) {
	case 1:
		flag();
		break;
	default:
		assert (false);
}
assert(flag()==1);

print("test2");
test_flag = 0;
int a=2;
switch( a ) {
	case 1: {
	}
	case 2: {
		assert ( a==2 );
		flag();
		break;
	}
	default: {
		assert ( a != 1 && a !=2 );
		break;
	}
}
assert( flag() == 1 );

test_flag = 0;
for(i=0; i<=3; i++) {
	switch( i ) {
		case 0: {
			assert(i==0);
			flag();
			break;
		}
		case 1: {
			assert (i==1 );
			flag();
			break;
		}
		case 2: {
			assert (i==2 );
			flag();
			break;
		}
		default: {
			assert ( i==3 );
			flag();
			break;
		}
	}
}
assert(flag()==4);


test_flag = 0;
for(i=98; i<=99; i++) {
	switch( i ){
		case 98: 
		case 99:
		{
			assert(i==98 || i==99);
			flag();
			break;
		}
		default: {
			assert(false);
		}
	}
}
assert(flag()==2);

print("test string");
test_flag = 0;
str="foo";
switch( str ) {
	case "foo": {
		flag();
		break;
	}
	default: {
		assert(false);
	}
}
assert(flag()==1);

print("test float");
test_flag = 0;
flt= 3.14F;
switch( flt ) {
	case 3.14F: {
		flag();
		break;
	}
	default: {
		assert(false);
	}
}
assert(flag()==1);

/* verify that return control works */
val=eval("switch(1){ case 1: return 5; default: return 10; }; return 10; ");
assert(val == 5);

complete();


