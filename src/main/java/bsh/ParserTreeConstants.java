/*****************************************************************************
 * Licensed to the Apache Software Foundation (ASF) under one                *
 * or more contributor license agreements.  See the NOTICE file              *
 * distributed with this work for additional information                     *
 * regarding copyright ownership.  The ASF licenses this file                *
 * to you under the Apache License, Version 2.0 (the                         *
 * "License"); you may not use this file except in compliance                *
 * with the License.  You may obtain a copy of the License at                *
 *                                                                           *
 *     http://www.apache.org/licenses/LICENSE-2.0                            *
 *                                                                           *
 * Unless required by applicable law or agreed to in writing,                *
 * software distributed under the License is distributed on an               *
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY                    *
 * KIND, either express or implied.  See the License for the                 *
 * specific language governing permissions and limitations                   *
 * under the License.                                                        *
 *                                                                           *
 *                                                                           *
 * This file is part of the BeanShell Java Scripting distribution.           *
 * Documentation and updates may be found at http://www.beanshell.org/       *
 * Patrick Niemeyer (pat@pat.net)                                            *
 * Author of Learning Java, O'Reilly & Associates                            *
 *                                                                           *
 *****************************************************************************/
/* Generated By:JJTree: Do not edit this line. src/bsh\ParserTreeConstants.java */
package bsh;

/**
 * The Interface ParserTreeConstants.
 */
public interface ParserTreeConstants {

    /** The jjtvoid. */
    public int JJTVOID = 0;
    /** The jjtclassdeclaration. */
    public int JJTCLASSDECLARATION = 1;
    /** The jjtmethoddeclaration. */
    public int JJTMETHODDECLARATION = 2;
    /** The jjtpackagedeclaration. */
    public int JJTPACKAGEDECLARATION = 3;
    /** The jjtimportdeclaration. */
    public int JJTIMPORTDECLARATION = 4;
    /** The jjtvariabledeclarator. */
    public int JJTVARIABLEDECLARATOR = 5;
    /** The jjtarrayinitializer. */
    public int JJTARRAYINITIALIZER = 6;
    /** The jjtformalparameters. */
    public int JJTFORMALPARAMETERS = 7;
    /** The jjtformalparameter. */
    public int JJTFORMALPARAMETER = 8;
    /** The jjttype. */
    public int JJTTYPE = 9;
    /** The jjtreturntype. */
    public int JJTRETURNTYPE = 10;
    /** The jjtprimitivetype. */
    public int JJTPRIMITIVETYPE = 11;
    /** The jjtambiguousname. */
    public int JJTAMBIGUOUSNAME = 12;
    /** The jjtassignment. */
    public int JJTASSIGNMENT = 13;
    /** The jjtternaryexpression. */
    public int JJTTERNARYEXPRESSION = 14;
    /** The jjtbinaryexpression. */
    public int JJTBINARYEXPRESSION = 15;
    /** The jjtunaryexpression. */
    public int JJTUNARYEXPRESSION = 16;
    /** The jjtcastexpression. */
    public int JJTCASTEXPRESSION = 17;
    /** The jjtprimaryexpression. */
    public int JJTPRIMARYEXPRESSION = 18;
    /** The jjtmethodinvocation. */
    public int JJTMETHODINVOCATION = 19;
    /** The jjtprimarysuffix. */
    public int JJTPRIMARYSUFFIX = 20;
    /** The jjtliteral. */
    public int JJTLITERAL = 21;
    /** The jjtarguments. */
    public int JJTARGUMENTS = 22;
    /** The jjtallocationexpression. */
    public int JJTALLOCATIONEXPRESSION = 23;
    /** The jjtarraydimensions. */
    public int JJTARRAYDIMENSIONS = 24;
    /** The jjtblock. */
    public int JJTBLOCK = 25;
    /** The jjtformalcomment. */
    public int JJTFORMALCOMMENT = 26;
    /** The jjtswitchstatement. */
    public int JJTSWITCHSTATEMENT = 27;
    /** The jjtswitchlabel. */
    public int JJTSWITCHLABEL = 28;
    /** The jjtifstatement. */
    public int JJTIFSTATEMENT = 29;
    /** The jjtwhilestatement. */
    public int JJTWHILESTATEMENT = 30;
    /** The jjtforstatement. */
    public int JJTFORSTATEMENT = 31;
    /** The jjtenhancedforstatement. */
    public int JJTENHANCEDFORSTATEMENT = 32;
    /** The jjttypedvariabledeclaration. */
    public int JJTTYPEDVARIABLEDECLARATION = 33;
    /** The jjtstatementexpressionlist. */
    public int JJTSTATEMENTEXPRESSIONLIST = 34;
    /** The jjtreturnstatement. */
    public int JJTRETURNSTATEMENT = 35;
    /** The jjtthrowstatement. */
    public int JJTTHROWSTATEMENT = 36;
    /** The jjttrystatement. */
    public int JJTTRYSTATEMENT = 37;
    /** The jjt node name. */
    public String[] jjtNodeName = {"void", "ClassDeclaration",
            "MethodDeclaration", "PackageDeclaration", "ImportDeclaration",
            "VariableDeclarator", "ArrayInitializer", "FormalParameters",
            "FormalParameter", "Type", "ReturnType", "PrimitiveType",
            "AmbiguousName", "Assignment", "TernaryExpression",
            "BinaryExpression", "UnaryExpression", "CastExpression",
            "PrimaryExpression", "MethodInvocation", "PrimarySuffix", "Literal",
            "Arguments", "AllocationExpression", "ArrayDimensions", "Block",
            "FormalComment", "SwitchStatement", "SwitchLabel", "IfStatement",
            "WhileStatement", "ForStatement", "EnhancedForStatement",
            "TypedVariableDeclaration", "StatementExpressionList",
            "ReturnStatement", "ThrowStatement", "TryStatement"};
}
